# HTTP server: Redirect all HTTP requests to HTTPS
server {
    listen 80;
    server_name app.mycompany.com;
    
    # Redirect all traffic to HTTPS with the same host and URI
    return 301 https://$host$request_uri;
}

# HTTPS server block
server {
    listen 441 ssl http2;
    server_name app.mycompany.com;
    
    # SSL Configuration
    ssl_certificate ./app.mycompany.com.pem;
    ssl_certificate_key ./app.mycompany.com-key.pem;
    
    # Enforce secure protocols and recommend ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305';
    
    # SSL session settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Logging (adjust paths if needed)
    access_log /var/log/nginx/app.mycompany.com.access.log;
    error_log  /var/log/nginx/app.mycompany.com.error.log;
    
    # Root location for static files. Adjust the path to your appâ€™s build folder if needed.
    root /var/www/app.mycompany.com/html;
    index index.html index.htm;
    
    # Main location block for serving the application
    location / {
        # Try to serve static files first, then fallback to index.html (for single-page apps)
        try_files $uri $uri/ /index.html;
    }
    
    # Proxy API requests to your backend server if needed
    location /api/ {
        proxy_pass http://localhost:4000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Proxy authentication or other specialized routes if needed
    location /auth/ {
        proxy_pass http://localhost:4000/auth/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # You can define additional location blocks here for Slack endpoints or other integrations.
    # For example, if you have a dedicated endpoint for Slack posting:
    location /slack.post {
        proxy_pass http://localhost:4000/auth/slack.post;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}